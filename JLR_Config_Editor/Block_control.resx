<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxBlock.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XO8J/w/Y0PtiW0H4kwAAAABJRU5ErkJggg==
</value>
  </data>
</root>